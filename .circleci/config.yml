defaults: &defaults
  working_directory: ~/react-native-webview

workspace: &addWorkspace
  attach_workspace:
    at: ~/react-native-webview

default config for js: &js_defaults
  <<: *defaults
  docker:
    - image: circleci/node:12.9.1-browsers

default config for Windows: &windows_defaults
  <<: *defaults
  resource_class: windows.medium
  shell: powershell.exe -ExecutionPolicy Bypass
  machine:
    image: windows-server-2019-vs2019:stable

version: 2
jobs:
  setup:
    <<: *js_defaults
    steps:
      - checkout
      - restore_cache:
          name: Restore node modules
          keys:
            - node_modules-{{ arch }}-{{ checksum "yarn.lock" }}

      - run:
          name: Install dependencies
          command: yarn --pure-lockfile

      - save_cache:
          name: Save node modules
          key: node_modules-{{ arch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            
      - persist_to_workspace:
          root: .
          paths: .

  "test: lint":
    <<: *js_defaults
    steps:
      - *addWorkspace
      - run:
          name: Lint check
          command: yarn ci

  "test: windows":
    <<: *windows_defaults
    steps:
      - *addWorkspace
      - run:
          name: Install nvm & switch to node 12.9.1
          command: |
            choco install nvm --no-progress
            nvm install 12.9.1
            nvm on
            nvm use 12.9.1
            node -v
      - run:
          name: Install react-native-cli 2.0.1
          command: npm install -g react-native-cli@2.0.1
      - run:
          name: Install certificate
          command: |
            $password=ConvertTo-SecureString "password" –asplaintext –force
            Import-PfxCertificate -FilePath example\windows\WebViewWindows\WebViewWindows_TemporaryKey.pfx -CertStoreLocation Cert:\LocalMachine\Root -Password $password -Exportable
            Import-PfxCertificate -FilePath example\windows\WebViewWindows\WebViewWindows_TemporaryKey.pfx -CertStoreLocation Cert:\LocalMachine\My -Password $password -Exportable
      - run:
          name: NuGet restore
          command: nuget restore example\windows\WebViewWindows.sln
      - run:
          name: Build
          command: msbuild example\windows\WebViewWindows.sln /p:Configuration=Release /p:Platform=x64 -m
      - run:
          name: Sign
          command: |
            $signTool = "${env:ProgramFiles(x86)}\Windows Kits\10\bin\x64\signtool.exe"
            $keyPath = "example\windows\WebViewWindows\WebViewWindows_TemporaryKey.pfx"
            $appxPath = "example\windows\AppPackages\WebViewWindows\WebViewWindows_1.0.0.0_x64_Test\WebViewWindows_1.0.0.0_x64.appx"
            & "$signTool" sign /fd sha256 /f $keyPath /p password $appxPath
      - store_artifacts:
          path: example\windows\AppPackages\

  publish:
    <<: *js_defaults
    steps:
      - *addWorkspace
      - run:
          name: Publish to NPM
          command: yarn ci:publish

workflows:
  version: 2
  ci:
    jobs:
      - setup
      - "test: lint":
          requires:
            - setup
      - "test: windows":
          requires:
            - setup
      - publish:
          requires:
            - "test: lint"
          filters:
            branches:
              only: master